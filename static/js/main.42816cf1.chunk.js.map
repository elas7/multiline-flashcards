{"version":3,"sources":["modules/flashcards.js","modules/index.js","store/index.js","components/Header/index.js","components/EmptyMessage/index.js","utils/index.js","containers/Home/MainMenu/index.js","containers/Home/index.js","components/BackButton/index.js","components/Modal/index.js","components/DeleteModal/index.js","containers/Set/DeleteSetModal/index.js","containers/Set/DeleteFlashcardModal/index.js","containers/Set/index.js","components/GoBack/index.js","containers/NewSet/index.js","containers/NewFlashcard/index.js","containers/EditFlashcard/index.js","containers/PracticeFlashcard/index.js","containers/App/index.js","serviceWorker.js","index.js"],"names":["CREATE_SET","DELETE_SET","UPDATE_SET_TITLE","UPDATE_SETS","CREATE_FLASHCARD","DELETE_FLASHCARD","UPDATE_FLASHCARD","MOVE_FLASHCARD","initialState","sets","deleteFlashcard","flashcardIndex","setIndex","type","payload","combineReducers","flashcards","state","arguments","length","undefined","action","newSet","title","Object","objectSpread","toConsumableArray","concat","filter","set","index","map","flashcard","console","log","flaschardToMove","newFlashcards","splice","destinationIndex","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","Header","_this$props","this","props","children","className","color","react","AppBar_default","a","cx","position","Toolbar_default","React","defaultProps","EmptyMessage","text","Avatar_default","classes","root","index_es","Typography_default","align","normalizeString","string","toLowerCase","trim","maybePluralize","count","noun","suffix","getRandomIntInclusive","min","max","Math","ceil","floor","random","diffMatchPatch","DiffMatchPatch","getDiffText","userAnswer","correctAnswer","diff","diff_main","diff_cleanupSemantic","goBack","history","lastLocation","parentURL","shouldPreserveCurrent","pathname","push","replace","MainMenu","anchorEl","handleMenuClick","event","_this","setState","currentTarget","closeMenu","handleImport","files","updateSets","file","reader","FileReader","onload","yaml","safeLoad","result","readAsText","handleExport","yamlString","safeDump","blob","Blob","fileName","moment","format","FileSaver","saveAs","IconButton_default","onClick","MoreVert_default","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","open","Boolean","onClose","upload_dist","onFiles","uploadProps","accept","hover","MenuItem_default","connect","dispatch","Home","deleteModalFlashcardId","handleSetClick","_this2","hasSets","components_Header","variant","Home_MainMenu","List_default","disablePadding","_ref","ListItem_default","button","ListItemText_default","primary","secondary","components_EmptyMessage","Button_default","component","Link","to","Add_default","withRouter","BackButton","handleKeyUp","shiftKey","handleClick","addEventListener","removeEventListener","ArrowBack_default","withLastLocation","Modal","otherProps","objectWithoutProperties","Modal_default","assign","Paper_default","DeleteModal","onDeleteConfirm","components_Modal","DeleteSetModal","handleDeleteConfirm","id","deleteSet","Number","onDeleteSuccess","components_DeleteModal","setId","_this$props2","Set","deleteModalSetId","editingTitle","editTitleMouseDown","handleRandomClick","handleDeleteSetClick","match","params","handleDeleteButtonClick","handleDeleteSetModalClose","handleDeleteFlashcardModalClose","handleSetDeleteSuccess","handleFlashcardDeleteSuccess","handleFlashcardClick","handleEditTitleClick","maybeSaveTitle","handleEditTitleMouseDown","setTimeout","handleTitleChange","value","target","randomFlashcardIndex","handleTitleBlur","handleTitleSubmit","preventDefault","_this$props3","updateSetTitle","onDragEnd","destination","source","moveFlashcard","_this$props4","_this$state","Redirect","hasFlashcards","Set_DeleteSetModal","DeleteFlashcardModal","components_BackButton","Delete_default","onSubmit","TextField_default","autoFocus","label","onChange","onBlur","InputLabelProps","shrink","margin","onMouseDown","Edit_default","disabled","size","Divider_default","react_beautiful_dnd_esm","droppableId","provided","RootRef_default","rootRef","innerRef","draggableId","String","draggableProps","default","dragHandleProps","DragIndicator_default","stopPropagation","placeholder","GoBack","NewSet","saved","isValid","handleSave","createSet","_this$state2","components_GoBack","NewFlashcard","handleChange","fieldName","defineProperty","createFlashcard","_this$state3","rows","rowsMax","multiline","EditFlashcard","hasChanged","flashcardId","updateFlashcard","PracticeFlashcard","checked","correct","diffText","textInput","setTextInputRef","element","focusTextInput","focus","handleKeyDown","handleCheck","handleAgain","trimmedText","DIFF_EQUAL","renderDiffText","diffType","expectedType","DIFF_INSERT","DIFF_DELETE","typeClass","prevProps","prevState","snapshot","gutterBottom","inputRef","spellCheck","Snackbar_default","ContentProps","transitionDuration","exit","message","App","CssBaseline_default","elevation","Switch","Route","exact","path","isLocalhost","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","react_default","createElement","es","integration_react","loading","BrowserRouter","basename","Fragment","ScrollMemory_min_default","elementID","dist","containers_App","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.42816cf1.chunk.js","sourcesContent":["// @flow\nimport type { Set, Flashcard } from \"../types\";\n\nconst CREATE_SET = \"flashcards/CREATE_SET\";\nconst DELETE_SET = \"flashcards/DELETE_SET\";\nconst UPDATE_SET_TITLE = \"flashcards/UPDATE_SET_TITLE\";\nconst UPDATE_SETS = \"flashcards/UPDATE_SETS\";\n\nconst CREATE_FLASHCARD = \"flashcards/CREATE_FLASHCARD\";\nconst DELETE_FLASHCARD = \"flashcards/DELETE_FLASHCARD\";\nconst UPDATE_FLASHCARD = \"flashcards/UPDATE_FLASHCARD\";\nconst MOVE_FLASHCARD = \"flashcards/MOVE_FLASHCARD\";\n\ntype State = {\n  sets: Set[]\n};\n\nconst initialState: State = {\n  sets: []\n};\n\n/**\n * Reducer\n */\nexport default function reducer(state: State = initialState, action: Object) {\n  switch (action.type) {\n    case CREATE_SET: {\n      const newSet = { title: action.payload.title, flashcards: [] };\n\n      return {\n        ...state,\n        sets: [...state.sets, newSet]\n      };\n    }\n    case DELETE_SET:\n      return {\n        ...state,\n        sets: state.sets.filter((set, index) => index !== action.payload.index)\n      };\n    case UPDATE_SET_TITLE:\n      return {\n        ...state,\n        sets: state.sets.map((set, index) => {\n          if (index === action.payload.index) {\n            return { ...set, title: action.payload.title };\n          }\n\n          return set;\n        })\n      };\n    case UPDATE_SETS:\n      return { ...state, sets: action.payload.sets };\n    case CREATE_FLASHCARD:\n      return {\n        ...state,\n        sets: state.sets.map((set, index) => {\n          if (index === action.payload.setIndex) {\n            return {\n              ...set,\n              flashcards: [...set.flashcards, action.payload.flashcard]\n            };\n          }\n\n          return set;\n        })\n      };\n    case DELETE_FLASHCARD:\n      return {\n        ...state,\n        sets: state.sets.map((set, index) => {\n          if (index === action.payload.setIndex) {\n            return {\n              ...set,\n              flashcards: set.flashcards.filter(\n                (flashcard, index) => index !== action.payload.flashcardIndex\n              )\n            };\n          }\n\n          return set;\n        })\n      };\n    case UPDATE_FLASHCARD:\n      return {\n        ...state,\n\n        sets: state.sets.map((set, index) => {\n          if (index === action.payload.setIndex) {\n            return {\n              ...set,\n              flashcards: set.flashcards.map((flashcard, index) => {\n                if (index === action.payload.flashcardIndex) {\n                  return action.payload.flashcard;\n                }\n\n                return flashcard;\n              })\n            };\n          }\n\n          return set;\n        })\n      };\n    case MOVE_FLASHCARD:\n      return {\n        ...state,\n\n        sets: state.sets.map((set, index) => {\n          if (index === action.payload.setIndex) {\n            console.log(action.payload.flashcardIndex)\n\n            const flaschardToMove = set.flashcards[action.payload.flashcardIndex];\n            const newFlashcards = [...set.flashcards];\n\n            newFlashcards.splice(action.payload.flashcardIndex, 1);\n            newFlashcards.splice(action.payload.destinationIndex, 0, flaschardToMove);\n\n            return {\n              ...set,\n              flashcards: newFlashcards\n            };\n          }\n\n          return set;\n        })\n      };\n    default:\n      return state;\n  }\n}\n\nexport function createSet(title: string) {\n  return {\n    type: CREATE_SET,\n    payload: {\n      title\n    }\n  };\n}\n\nexport function deleteSet(index: number) {\n  return {\n    type: DELETE_SET,\n    payload: {\n      index\n    }\n  };\n}\n\nexport function updateSetTitle(index: number, title: string) {\n  return {\n    type: UPDATE_SET_TITLE,\n    payload: {\n      index,\n      title\n    }\n  };\n}\n\nexport function createFlashcard(flashcard: Flashcard, setIndex: number) {\n  return {\n    type: CREATE_FLASHCARD,\n    payload: {\n      flashcard,\n      setIndex\n    }\n  };\n}\n\nexport function deleteFlashcard(flashcardIndex: number, setIndex: number) {\n  return {\n    type: DELETE_FLASHCARD,\n    payload: {\n      flashcardIndex,\n      setIndex\n    }\n  };\n}\n\nexport function moveFlashcard(\n  flashcardIndex: number,\n  destinationIndex: number,\n  setIndex: number\n) {\n  return {\n    type: MOVE_FLASHCARD,\n    payload: {\n      flashcardIndex,\n      destinationIndex,\n      setIndex\n    }\n  };\n}\n\nexport function updateFlashcard(\n  flashcard: Flashcard,\n  flashcardIndex: number,\n  setIndex: number\n) {\n  return {\n    type: UPDATE_FLASHCARD,\n    payload: {\n      flashcard,\n      flashcardIndex,\n      setIndex\n    }\n  };\n}\n\nexport function updateSets(sets: Set[]) {\n  return {\n    type: UPDATE_SETS,\n    payload: {\n      sets\n    }\n  };\n}\n","// @flow\nimport { combineReducers } from \"redux\";\n\nimport flashcards from \"./flashcards\";\n\nexport default combineReducers({\n  flashcards\n});\n","// @flow\nimport { createStore } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport rootReducer from \"../modules\";\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(\n  persistedReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport const persistor = persistStore(store);\n","// @flow\nimport * as React from \"react\";\nimport cx from \"classnames\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nimport \"./styles.css\";\n\ntype Props = {\n  children: React.Node,\n  className: string,\n  color: string\n};\n\nclass Header extends React.Component<Props> {\n  static defaultProps = {\n    className: \"\",\n    color: \"primary\"\n  };\n\n  render() {\n    const { children, className, color } = this.props;\n\n    return (\n      <AppBar\n        className={cx(\"appBar\", className)}\n        position=\"sticky\"\n        color={color}\n      >\n        <Toolbar className=\"smallToolbar\">{children}</Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default Header;\n","// @flow\nimport * as React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Cards } from \"mdi-material-ui\";\n\nimport \"./styles.css\";\n\ntype Props = {\n  text: string\n};\n\nclass EmptyMessage extends React.Component<Props> {\n  static defaultProps = {\n    text: \"You have no flashcards. Tap the Add Button to create a new one.\"\n  };\n\n  render() {\n    const { text } = this.props;\n\n    return (\n      <div className=\"emptyMessage\">\n        <Avatar\n          classes={{\n            root: \"emptyMessageAvatar\"\n          }}\n        >\n          <Cards className=\"emptyMessageIcon\" />\n        </Avatar>\n        <Typography align=\"center\" color=\"textSecondary\">\n          You have no flashcards. Tap the Add Button to create a new set\n        </Typography>\n      </div>\n    );\n  }\n}\n\nexport default EmptyMessage;\n","// @flow\nimport DiffMatchPatch from \"diff-match-patch\";\n\nimport type { WordInString, DiffText } from \"../types\";\n\nconst normalizeString = (string: string) => {\n  return string.toLowerCase().trim();\n};\n\n/**\n * Pluralize noun if appropriate\n */\nexport const maybePluralize = (\n  count: number,\n  noun: string,\n  suffix: string = \"s\"\n) => `${count} ${noun}${count !== 1 ? suffix : \"\"}`;\n\n/**\n * Returns a random integer between two values, inclusive\n */\nexport const getRandomIntInclusive = (min: number, max: number) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst diffMatchPatch = new DiffMatchPatch();\n\nexport const getDiffText = (\n  userAnswer: string,\n  correctAnswer: string\n): DiffText[] => {\n  const diff = diffMatchPatch.diff_main(\n    normalizeString(correctAnswer),\n    normalizeString(userAnswer)\n  );\n\n  diffMatchPatch.diff_cleanupSemantic(diff);\n\n  return diff;\n};\n\n/**\n * Navigates back to the hierarchical parent URL.\n *\n * Navigates back with history.goBack() if last history state is also the hierarchical parent.\n * Otherwise navigates with history.push() or history.replace()\n *\n * RATIONALE:\n *\n * There are 2 ways to navigate back in an app:\n * 1) The APP navigation:\n *      - A back button or any programmatic in-app navigation.\n *      - Navigates based on the HIERARCHICAL order of pages.\n *      - Done by pushing an entry to the browser history. (*)\n * 2) The SYSTEM navigation:\n *      - The browser/mobile-OS back button.\n *      - Navigates based on the CHRONOLOGICAL order of pages.\n *      - Done by going to the previous entry in browser history.\n *\n * This function should be called every time the app wants to navigate to the parent URL. It handles\n * one edge case:\n *\n * (*) If the HIERARCHICAL and CHRONOLOGICAL previous pages are the same, then the navigation should be\n * made with history.goBack() instead of history.push(). This is because the UX is more consistent and\n * preserves the scroll positions.\n *\n * Based on https://developer.android.com/training/design-navigation/ancestral-temporal\n */\nexport const goBack = (\n  history: Object,\n  lastLocation: Object | null,\n  parentURL: string,\n  shouldPreserveCurrent: boolean = true\n) => {\n  const lastLocationIsParentURL =\n    lastLocation && lastLocation.pathname === parentURL;\n\n  if (lastLocationIsParentURL) {\n    history.goBack();\n  } else {\n    if (shouldPreserveCurrent) {\n      history.push(parentURL);\n    } else {\n      history.replace(parentURL);\n    }\n  }\n};\n","// @flow\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport yaml from \"js-yaml\";\nimport FileSaver from \"file-saver\";\nimport moment from \"moment\";\n\nimport { UploadField } from \"@navjobs/upload\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\nimport { updateSets } from \"../../../modules/flashcards\";\nimport { Set } from \"../../../types\";\n\nimport \"./styles.css\";\n\ntype Props = {\n  sets: Set[],\n  updateSets: Function\n};\n\ntype State = {\n  anchorEl: ?HTMLElement\n};\n\nclass MainMenu extends React.Component<Props, State> {\n  state = {\n    anchorEl: null\n  };\n\n  static defaultProps = {\n    sets: []\n  };\n\n  handleMenuClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  closeMenu = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  handleImport = files => {\n    const { updateSets } = this.props;\n\n    const file = files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      const flashcards = yaml.safeLoad(reader.result);\n      updateSets(flashcards.sets);\n    };\n    reader.readAsText(file);\n\n    this.closeMenu();\n  };\n\n  handleExport = () => {\n    const { sets } = this.props;\n\n    const yamlString = yaml.safeDump({ sets });\n    const blob = new Blob([yamlString], { type: \"text/plain;charset=utf-8\" });\n    const fileName = `flashcards-${moment().format(\"Y-M-D\")}.yaml`;\n    FileSaver.saveAs(blob, fileName);\n\n    this.closeMenu();\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n\n    return (\n      <React.Fragment>\n        <IconButton\n          className=\"menuIcon\"\n          color=\"inherit\"\n          onClick={this.handleMenuClick}\n        >\n          <MoreVertIcon />\n        </IconButton>\n        <Menu\n          anchorEl={anchorEl}\n          anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n          transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n          open={Boolean(anchorEl)}\n          onClose={this.closeMenu}\n        >\n          <UploadField\n            onFiles={this.handleImport}\n            uploadProps={{\n              accept: \".yaml\"\n            }}\n          >\n            {hover => (\n              <MenuItem\n                classes={{\n                  root: hover ? \"uploadFieldHover\" : null\n                }}\n              >\n                Import Data\n              </MenuItem>\n            )}\n          </UploadField>\n          <MenuItem onClick={this.handleExport}>Export Data</MenuItem>\n        </Menu>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    sets: state.flashcards.sets\n  }),\n  dispatch => ({\n    updateSets: sets => dispatch(updateSets(sets))\n  })\n)(MainMenu);\n","// @flow\nimport * as React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Cards } from \"mdi-material-ui\";\n\nimport { deleteFlashcard } from \"../../modules/flashcards\";\nimport { Set } from \"../../types\";\nimport Header from \"../../components/Header\";\nimport EmptyMessage from \"../../components/EmptyMessage\";\nimport { maybePluralize } from \"../../utils\";\n\nimport MainMenu from \"./MainMenu\";\nimport \"./styles.css\";\n\ntype Props = {\n  sets: Set[],\n  history: Object\n};\n\ntype State = {\n  // Id of Flashcard to show in Delete modal, if any\n  deleteModalFlashcardId: number | null\n};\n\nclass Home extends React.Component<Props, State> {\n  static defaultProps = {\n    sets: []\n  };\n\n  state = {\n    deleteModalFlashcardId: null\n  };\n\n  handleSetClick = index => {\n    const { history } = this.props;\n\n    history.push(`/sets/${index + 1}`);\n  };\n\n  render() {\n    const { sets } = this.props;\n\n    const hasSets = sets.length !== 0;\n\n    return (\n      <React.Fragment>\n        <Header>\n          <Typography\n            variant=\"headline\"\n            color=\"inherit\"\n            className=\"appBarTitle\"\n          >\n            Multiline Flashcards\n          </Typography>\n          <MainMenu />\n        </Header>\n        <div className=\"textsContainer\">\n          {hasSets ? (\n            <React.Fragment>\n              <Typography variant=\"title\" className=\"content\">\n                Sets\n              </Typography>\n              <List disablePadding>\n                {sets.map(({ title, flashcards }, index) => {\n                  return (\n                    <ListItem\n                      button\n                      key={index}\n                      onClick={() => this.handleSetClick(index)}\n                    >\n                      <Avatar>\n                        <Cards />\n                      </Avatar>\n                      <ListItemText\n                        primary={title}\n                        secondary={maybePluralize(\n                          flashcards.length,\n                          \"flashcard\"\n                        )}\n                      />\n                    </ListItem>\n                  );\n                })}\n              </List>\n            </React.Fragment>\n          ) : (\n            <EmptyMessage\n              text={\n                \"You have no flashcards. Tap the Add Button to create a new set\"\n              }\n            />\n          )}\n          <Button\n            className=\"addButton\"\n            component={Link}\n            to=\"/sets/new\"\n            variant=\"fab\"\n            color=\"secondary\"\n          >\n            <AddIcon />\n          </Button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(\n  connect(\n    state => ({\n      sets: state.flashcards.sets\n    }),\n    dispatch => ({\n      deleteFlashcard: index => dispatch(deleteFlashcard(index))\n    })\n  )(Home)\n);\n","// @flow\nimport * as React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { withLastLocation } from \"react-router-last-location\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\n\nimport { goBack } from \"../../utils\";\n\ntype Props = {\n  className: string,\n  parentURL: string,\n  history: Object,\n  lastLocation: Object | null\n};\n\nclass BackButton extends React.Component<Props> {\n  static defaultProps = {\n    className: \"\",\n    parentURL: \"/\"\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"keyup\", this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keyup\", this.handleKeyUp);\n  }\n\n  goBack = () => {\n    const { history, lastLocation, parentURL } = this.props;\n\n    goBack(history, lastLocation, parentURL);\n  };\n\n  handleKeyUp = event => {\n    // \"Click\" if ALT + ArrowLeft is pressed\n    if (event.shiftKey && event.key === \"ArrowLeft\") {\n      this.goBack();\n    }\n  };\n\n  handleClick = () => this.goBack();\n\n  render() {\n    const { className } = this.props;\n\n    return (\n      <IconButton\n        className={className}\n        color=\"inherit\"\n        onClick={this.handleClick}\n      >\n        <ArrowBack />\n      </IconButton>\n    );\n  }\n}\n\nexport default withLastLocation(withRouter(BackButton));\n","// @flow\nimport * as React from \"react\";\nimport cx from \"classnames\";\nimport MaterialUIModal from \"@material-ui/core/Modal\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport \"./styles.css\";\n\ntype Props = {\n  children: React.Node,\n  className: string,\n\n  // props used by material-ui's Modal component\n  open: boolean,\n  onClose: Function\n};\n\nclass Modal extends React.Component<Props> {\n  static defaultProps = {\n    className: \"\",\n    open: true\n  };\n\n  render() {\n    const { children, className, onClose, open, ...otherProps } = this.props;\n\n    return (\n      <MaterialUIModal onClose={onClose} open={open} {...otherProps}>\n        <Paper className={cx(\"modal\", className)}>{children}</Paper>\n      </MaterialUIModal>\n    );\n  }\n}\n\nexport default Modal;\n","// @flow\nimport * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modal from \"../Modal\";\n\nimport \"./styles.css\";\n\ntype ObjectType = \"flashcard\" | \"set\";\n\ntype Props = {\n  type: ObjectType,\n  title: string | null,\n  open: boolean,\n  onClose: Function,\n  onDeleteConfirm: Function\n};\n\nclass DeleteModal extends React.Component<Props> {\n  render() {\n    const {\n      type,\n      title,\n      open,\n      onClose,\n      onDeleteConfirm,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <Modal onClose={onClose} open={open} {...otherProps}>\n        <React.Fragment>\n          <Typography variant=\"subheading\">\n            Are you sure you want to delete the {type} {`\"${title}\"?`}\n          </Typography>\n          <div className=\"modalButtonsContainer\">\n            <Button onClick={onClose}>Cancel</Button>\n            <Button variant=\"raised\" color=\"primary\" onClick={onDeleteConfirm}>\n              Delete\n            </Button>\n          </div>\n        </React.Fragment>\n      </Modal>\n    );\n  }\n}\n\nexport default DeleteModal;\n","// @flow\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteSet } from \"../../../modules/flashcards\";\nimport DeleteModal from \"../../../components/DeleteModal\";\nimport { Set } from \"../../../types\";\n\ntype Props = {\n  id: number,\n  onClose: Function,\n  onDeleteSuccess: Function,\n  set: Set,\n  deleteSet: Function\n};\n\nclass DeleteSetModal extends React.Component<Props, State> {\n  handleDeleteConfirm = () => {\n    const { id } = this.props;\n\n    this.props.deleteSet(Number(id) - 1);\n    this.props.onDeleteSuccess();\n  };\n\n  render() {\n    const { id, set, onClose } = this.props;\n\n    return (\n      <DeleteModal\n        type=\"set\"\n        title={set ? set.title : null}\n        open={id !== null}\n        onClose={onClose}\n        onDeleteConfirm={this.handleDeleteConfirm}\n      />\n    );\n  }\n}\n\nexport default connect(\n  (state, props) => ({\n    set: props.id ? state.flashcards.sets[Number(props.id) - 1] : null\n  }),\n  dispatch => ({\n    deleteSet: index => dispatch(deleteSet(index))\n  })\n)(DeleteSetModal);\n","// @flow\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteFlashcard } from \"../../../modules/flashcards\";\nimport DeleteModal from \"../../../components/DeleteModal\";\nimport type { Flashcard } from \"../../../types\";\n\ntype Props = {\n  id: number,\n  setId: number,\n  onClose: Function,\n  onDeleteSuccess: Function,\n  flashcard: Flashcard,\n  deleteFlashcard: Function\n};\n\nclass DeleteSetModal extends React.Component<Props, State> {\n  handleDeleteConfirm = () => {\n    const { id, setId } = this.props;\n\n    this.props.deleteFlashcard(id, Number(setId) - 1);\n    this.props.onDeleteSuccess();\n  };\n\n  render() {\n    const { id, setId, flashcard, onClose } = this.props;\n\n    return (\n      <DeleteModal\n        type=\"flashcard\"\n        title={flashcard ? flashcard.title : null}\n        open={id !== null}\n        onClose={onClose}\n        onDeleteConfirm={this.handleDeleteConfirm}\n      />\n    );\n  }\n}\n\nexport default connect(\n  (state, props) => ({\n    flashcard:\n      props.id !== null\n        ? state.flashcards.sets[Number(props.setId) - 1].flashcards[props.id]\n        : null\n  }),\n  dispatch => ({\n    deleteFlashcard: (index, setIndex) =>\n      dispatch(deleteFlashcard(index, setIndex))\n  })\n)(DeleteSetModal);\n","// @flow\nimport * as React from \"react\";\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport RootRef from \"@material-ui/core/RootRef\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\nimport { Dice5 } from \"mdi-material-ui\";\n\nimport BackButton from \"../../components/BackButton\";\nimport { moveFlashcard, updateSetTitle } from \"../../modules/flashcards\";\nimport { Flashcard } from \"../../types\";\nimport Header from \"../../components/Header\";\nimport EmptyMessage from \"../../components/EmptyMessage\";\nimport { maybePluralize, getRandomIntInclusive } from \"../../utils\";\nimport DeleteSetModal from \"./DeleteSetModal\";\nimport DeleteFlashcardModal from \"./DeleteFlashcardModal\";\nimport \"./styles.css\";\n\ntype Props = {\n  flashcards: Flashcard[],\n  moveFlashcard: Function,\n  deleteSet: Function,\n  history: Object,\n  match: Object\n};\n\ntype State = {\n  // Id of Flashcard to show in Delete modal, if any\n  deleteModalFlashcardId: number | null,\n  // Id of Set to show in Delete modal, if any\n  deleteModalSetId: number | null,\n  // true if the title set is being edited\n  editingTitle: boolean,\n  // Used to prevent race between input blur and button click\n  editTitleMouseDown: boolean,\n  // title being edited\n  title: string\n};\n\nclass Set extends React.Component<Props, State> {\n  static defaultProps = {\n    flashcards: []\n  };\n\n  state = {\n    deleteModalFlashcardId: null,\n    deleteModalSetId: null,\n    editingTitle: false,\n    editTitleMouseDown: false,\n    title: this.props.set.title\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"keyup\", this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keyup\", this.handleKeyUp);\n  }\n\n  handleKeyUp = event => {\n    const { editingTitle } = this.state;\n\n    // \"Click\" random when \"r\" is pressed\n    if (!editingTitle && event.key === \"r\") {\n      this.handleRandomClick();\n    }\n  };\n\n  handleDeleteSetClick = () => {\n    const {\n      match: {\n        params: { setId }\n      }\n    } = this.props;\n\n    this.setState({ deleteModalSetId: setId });\n  };\n\n  handleDeleteButtonClick = flashcardIndex => {\n    this.setState({ deleteModalFlashcardId: flashcardIndex });\n  };\n\n  handleDeleteSetModalClose = () => {\n    this.setState({ deleteModalSetId: null });\n  };\n\n  handleDeleteFlashcardModalClose = () => {\n    this.setState({ deleteModalFlashcardId: null });\n  };\n\n  handleSetDeleteSuccess = () => {\n    const { history } = this.props;\n\n    history.push(`/`);\n  };\n\n  handleFlashcardDeleteSuccess = () => {\n    this.setState({ deleteModalFlashcardId: null });\n  };\n\n  handleFlashcardClick = index => {\n    const {\n      history,\n      match: {\n        params: { setId }\n      }\n    } = this.props;\n\n    history.push(`/sets/${setId}/flashcards/${index + 1}/practice`);\n  };\n\n  handleEditTitleClick = () => {\n    const { editingTitle } = this.state;\n\n    if (!editingTitle) {\n      this.setState({\n        editingTitle: true\n      });\n    } else {\n      this.maybeSaveTitle();\n    }\n  };\n\n  handleEditTitleMouseDown = () => {\n    this.setState({ editTitleMouseDown: true });\n\n    setTimeout(() => {\n      this.setState({ editTitleMouseDown: false });\n    }, 100);\n  };\n\n  handleTitleChange = event => {\n    const value = event.target.value;\n\n    this.setState({\n      title: value\n    });\n  };\n\n  handleRandomClick = () => {\n    const {\n      history,\n      set: { flashcards },\n      match: {\n        params: { setId }\n      }\n    } = this.props;\n\n    if (flashcards.length <= 1) {\n      return;\n    }\n\n    const randomFlashcardIndex = getRandomIntInclusive(\n      0,\n      flashcards.length - 1\n    );\n\n    history.push(\n      `/sets/${setId}/flashcards/${randomFlashcardIndex + 1}/practice`\n    );\n  };\n\n  handleTitleBlur = () => {\n    const { editTitleMouseDown } = this.state;\n\n    // Sometimes blur and edit-click can happen at the same time.\n    // If so, let edit-click handle the save\n    if (!editTitleMouseDown) {\n      this.maybeSaveTitle();\n    }\n  };\n\n  handleTitleSubmit = event => {\n    event.preventDefault();\n    this.maybeSaveTitle();\n  };\n\n  maybeSaveTitle = () => {\n    const { title } = this.state;\n    const {\n      match: {\n        params: { setId }\n      },\n      set: { title: oldTitle }\n    } = this.props;\n\n    if (title !== oldTitle && title.trim()) {\n      this.props.updateSetTitle(Number(setId) - 1, title);\n    }\n\n    this.setState({\n      title: title,\n      editingTitle: false\n    });\n  };\n\n  onDragEnd = result => {\n    const {\n      match: {\n        params: { setId }\n      }\n    } = this.props;\n    const { destination, source } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    // dropped to the same place\n    if (destination.index === source.index) {\n      return;\n    }\n\n    this.props.moveFlashcard(\n      source.index,\n      destination.index,\n      Number(setId) - 1\n    );\n  };\n\n  render() {\n    const {\n      set,\n      match: {\n        params: { setId }\n      }\n    } = this.props;\n    const {\n      deleteModalFlashcardId,\n      deleteModalSetId,\n      editingTitle,\n      title\n    } = this.state;\n\n    if (!set) {\n      return <Redirect push to=\"/\" />;\n    }\n\n    const flashcards = set.flashcards;\n    const hasFlashcards = flashcards.length !== 0;\n\n    return (\n      <React.Fragment>\n        <DeleteSetModal\n          id={deleteModalSetId}\n          onClose={this.handleDeleteSetModalClose}\n          onDeleteSuccess={this.handleSetDeleteSuccess}\n        />\n        <DeleteFlashcardModal\n          id={deleteModalFlashcardId}\n          setId={setId}\n          onClose={this.handleDeleteFlashcardModalClose}\n          onDeleteSuccess={this.handleFlashcardDeleteSuccess}\n        />\n        <Header>\n          <BackButton className=\"menuIconLeft\" />\n          <Typography\n            variant=\"headline\"\n            color=\"inherit\"\n            className=\"appBarTitle\"\n          >\n            Set\n          </Typography>\n          <IconButton\n            className=\"menuIcon\"\n            color=\"inherit\"\n            onClick={this.handleDeleteSetClick}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Header>\n        <div className=\"setInfo\">\n          <div className=\"titleContainer\">\n            {editingTitle ? (\n              <form className=\"titleForm\" onSubmit={this.handleTitleSubmit}>\n                <TextField\n                  autoFocus\n                  label=\"Title\"\n                  onChange={this.handleTitleChange}\n                  onBlur={this.handleTitleBlur}\n                  value={title}\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"normal\"\n                />\n              </form>\n            ) : (\n              <Typography variant=\"title\">{set.title}</Typography>\n            )}\n            <IconButton\n              color={editingTitle ? \"primary\" : \"inherit\"}\n              onClick={this.handleEditTitleClick}\n              onMouseDown={this.handleEditTitleMouseDown}\n              classes={{ root: \"editTitleButton\" }}\n            >\n              <EditIcon />\n            </IconButton>\n          </div>\n          <Typography variant=\"subheading\" color=\"textSecondary\">\n            {maybePluralize(flashcards.length, \"flashcard\")}\n          </Typography>\n          {hasFlashcards && (\n            <div className=\"setButtonContainer\">\n              <Button\n                disabled={flashcards.length <= 1}\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"small\"\n                onClick={this.handleRandomClick}\n              >\n                Random\n                <Dice5 className=\"iconRight\" />\n              </Button>\n            </div>\n          )}\n        </div>\n        <Divider />\n        <div className=\"textsContainer\" id=\"scrollingElement\">\n          {hasFlashcards ? (\n            <DragDropContext onDragEnd={this.onDragEnd}>\n              <Droppable droppableId=\"droppable\">\n                {provided => (\n                  <RootRef rootRef={provided.innerRef}>\n                    <List disablePadding>\n                      {flashcards.map(({ title }, index) => {\n                        return (\n                          <Draggable\n                            key={index}\n                            draggableId={String(index)}\n                            index={index}\n                          >\n                            {provided => (\n                              <RootRef rootRef={provided.innerRef}>\n                                <ListItem\n                                  {...provided.draggableProps}\n                                  classes={{ default: \"listItem\" }}\n                                  button\n                                  key={index}\n                                  onClick={() =>\n                                    this.handleFlashcardClick(index)\n                                  }\n                                >\n                                  <div {...provided.dragHandleProps}>\n                                    <DragIndicatorIcon />\n                                  </div>\n                                  <ListItemText primary={title} />\n                                  <IconButton\n                                    onClick={event => {\n                                      event.stopPropagation();\n                                    }}\n                                    component={Link}\n                                    to={`/sets/${setId}/flashcards/${index +\n                                      1}/edit`}\n                                  >\n                                    <EditIcon />\n                                  </IconButton>\n\n                                  <IconButton\n                                    onClick={event => {\n                                      event.stopPropagation();\n                                      this.handleDeleteButtonClick(index);\n                                    }}\n                                  >\n                                    <DeleteIcon />\n                                  </IconButton>\n                                </ListItem>\n                              </RootRef>\n                            )}\n                          </Draggable>\n                        );\n                      })}\n                      {provided.placeholder}\n                    </List>\n                  </RootRef>\n                )}\n              </Droppable>\n            </DragDropContext>\n          ) : (\n            <EmptyMessage />\n          )}\n          <Button\n            className=\"addButton\"\n            component={Link}\n            to={`/sets/${setId}/flashcards/new`}\n            variant=\"fab\"\n            color=\"secondary\"\n          >\n            <AddIcon />\n          </Button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(\n  connect(\n    (state, props) => ({\n      set: state.flashcards.sets[Number(props.match.params.setId) - 1]\n    }),\n    dispatch => ({\n      moveFlashcard: (index, destinationIndex, setIndex) =>\n        dispatch(moveFlashcard(index, destinationIndex, setIndex)),\n      updateSetTitle: (index, title) => dispatch(updateSetTitle(index, title))\n    })\n  )(Set)\n);\n","// @flow\nimport * as React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { withLastLocation } from \"react-router-last-location\";\n\nimport { goBack } from \"../../utils\";\n\ntype Props = {\n  parentURL: string,\n  history: Object,\n  lastLocation: Object | null\n};\n\n/**\n * Navigates back (hierarchically) in the app\n */\nclass GoBack extends React.Component<Props> {\n  static defaultProps = {\n    parentURL: \"/\"\n  };\n\n  goBack = () => {\n    const { history, lastLocation, parentURL } = this.props;\n\n    goBack(history, lastLocation, parentURL);\n  };\n\n  componentDidMount() {\n    this.goBack();\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withLastLocation(withRouter(GoBack));\n","// @flow\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport BackButton from \"../../components/BackButton\";\nimport GoBack from \"../../components/GoBack\";\nimport { createSet } from \"../../modules/flashcards\";\nimport Header from \"../../components/Header\";\nimport \"./styles.css\";\n\ntype Props = {\n  createSet: Function\n};\n\ntype State = {\n  title: string,\n  saved: boolean\n};\n\nclass NewSet extends React.Component<Props, State> {\n  state = {\n    title: \"\",\n    saved: false\n  };\n\n  isValid = () => {\n    const { title, saved } = this.state;\n\n    return title.trim() && !saved;\n  };\n\n  handleTitleChange = event => {\n    const value = event.target.value;\n\n    this.setState({\n      title: value\n    });\n  };\n\n  handleSave = event => {\n    const { title } = this.state;\n\n    event.preventDefault();\n\n    if (!this.isValid()) {\n      return;\n    }\n\n    this.props.createSet(title);\n    this.setState({\n      saved: true\n    });\n  };\n\n  render() {\n    const { title, saved } = this.state;\n\n    if (saved) {\n      return <GoBack to=\"/\" />;\n    }\n\n    return (\n      <React.Fragment>\n        <Header color=\"default\">\n          <BackButton />\n          <Typography variant=\"subheading\" color=\"inherit\">\n            New Set\n          </Typography>\n        </Header>\n        <form className=\"newFlashcardContent\" onSubmit={this.handleSave}>\n          <div className=\"newFlashcardForm\">\n            <TextField\n              label=\"Title\"\n              placeholder=\"Add the title...\"\n              onChange={event => this.handleTitleChange(event)}\n              value={title}\n              InputLabelProps={{\n                shrink: true\n              }}\n              margin=\"normal\"\n            />\n          </div>\n          <Button\n            variant=\"raised\"\n            color=\"primary\"\n            onClick={this.handleSave}\n            disabled={!this.isValid()}\n          >\n            Save\n          </Button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  dispatch => ({\n    createSet: text => dispatch(createSet(text))\n  })\n)(NewSet);\n","// @flow\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport BackButton from \"../../components/BackButton\";\nimport GoBack from \"../../components/GoBack\";\nimport { createFlashcard } from \"../../modules/flashcards\";\nimport Header from \"../../components/Header\";\nimport \"./styles.css\";\n\ntype Props = {\n  createFlashcard: Function,\n  history: Object,\n  lastLocation: Object | null\n};\n\ntype State = {\n  title: string,\n  text: string,\n  saved: boolean,\n  match: Object\n};\n\nclass NewFlashcard extends React.Component<Props, State> {\n  state = {\n    title: \"\",\n    text: \"\",\n    saved: false\n  };\n\n  isValid = () => {\n    const { title, text, saved } = this.state;\n\n    return title.trim() && text.trim() && !saved;\n  };\n\n  handleChange = (fieldName, event) => {\n    const value = event.target.value;\n\n    this.setState({\n      [fieldName]: value\n    });\n  };\n\n  handleSave = () => {\n    const {\n      match: {\n        params: { setId }\n      }\n    } = this.props;\n    const { title, text } = this.state;\n\n    if (!this.isValid()) {\n      return;\n    }\n\n    this.props.createFlashcard({ title, text }, Number(setId - 1));\n    this.setState({\n      saved: true\n    });\n  };\n\n  render() {\n    const {\n      match: {\n        params: { setId }\n      }\n    } = this.props;\n    const { title, text, saved } = this.state;\n\n    if (saved) {\n      return <GoBack parentURL={`/sets/${setId}`} />;\n    }\n\n    return (\n      <React.Fragment>\n        <Header color=\"default\">\n          <BackButton parentURL={`/sets/${setId}`} />\n          <Typography variant=\"subheading\" color=\"inherit\">\n            New Flashcard\n          </Typography>\n        </Header>\n        <div className=\"newFlashcardContent\">\n          <div className=\"newFlashcardForm\">\n            <TextField\n              label=\"Title\"\n              placeholder=\"Add the title...\"\n              onChange={event => this.handleChange(\"title\", event)}\n              value={title}\n              InputLabelProps={{\n                shrink: true\n              }}\n              margin=\"normal\"\n            />\n            <TextField\n              label=\"Text\"\n              placeholder=\"Add the text...\"\n              onChange={event => this.handleChange(\"text\", event)}\n              value={text}\n              rows={3}\n              rowsMax={10}\n              InputLabelProps={{\n                shrink: true\n              }}\n              multiline\n              margin=\"normal\"\n            />\n          </div>\n          <Button\n            variant=\"raised\"\n            color=\"primary\"\n            onClick={this.handleSave}\n            disabled={!this.isValid()}\n          >\n            Save\n          </Button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  dispatch => ({\n    createFlashcard: (flashcard, index) =>\n      dispatch(createFlashcard(flashcard, index))\n  })\n)(NewFlashcard);\n","// @flow\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport BackButton from \"../../components/BackButton\";\nimport GoBack from '../../components/GoBack';\nimport { updateFlashcard } from \"../../modules/flashcards\";\nimport { Flashcard } from \"../../types\";\nimport Header from \"../../components/Header\";\nimport \"./styles.css\";\n\ntype Props = {\n  updateFlashcard: Function,\n  match: Object,\n  flashcard: ?Flashcard\n};\n\ntype State = {\n  title: string,\n  text: string,\n  saved: boolean\n};\n\nclass EditFlashcard extends React.Component<Props, State> {\n  state = {\n    title: this.props.flashcard ? this.props.flashcard.title : \"\",\n    text: this.props.flashcard ? this.props.flashcard.text : \"\",\n    saved: false\n  };\n\n  isValid = () => {\n    const { title, text, saved } = this.state;\n\n    const hasChanged =\n      this.props.flashcard.title !== title ||\n      this.props.flashcard.text !== text;\n\n    return title.trim() && text.trim() && !saved && hasChanged;\n  };\n\n  handleChange = (fieldName, event) => {\n    const value = event.target.value;\n\n    this.setState({\n      [fieldName]: value\n    });\n  };\n\n  handleSave = () => {\n    const { match } = this.props;\n    const { title, text } = this.state;\n\n    if (!this.isValid()) {\n      return;\n    }\n\n    const flashcardIndex = Number(match.params.flashcardId) - 1;\n    const setIndex = Number(match.params.setId) - 1;\n    this.props.updateFlashcard({ title, text }, flashcardIndex, setIndex);\n    this.setState({\n      saved: true\n    });\n  };\n\n  render() {\n    const {\n      match: {\n        params: { setId }\n      }\n    } = this.props;\n    const { title, text, saved } = this.state;\n\n    if (saved || !this.props.flashcard) {\n      return <GoBack to={`/sets/${setId}`} />;\n    }\n\n    return (\n      <React.Fragment>\n        <Header color=\"default\">\n          <BackButton />\n          <Typography variant=\"subheading\" color=\"inherit\">\n            Edit Flashcard\n          </Typography>\n        </Header>\n        <div className=\"newFlashcardContent\">\n          <div className=\"newFlashcardForm\">\n            <TextField\n              label=\"Title\"\n              placeholder=\"Add the title...\"\n              onChange={event => this.handleChange(\"title\", event)}\n              value={title}\n              InputLabelProps={{\n                shrink: true\n              }}\n              margin=\"normal\"\n            />\n            <TextField\n              label=\"Text\"\n              placeholder=\"Add the text...\"\n              onChange={event => this.handleChange(\"text\", event)}\n              value={text}\n              rows={3}\n              rowsMax={10}\n              InputLabelProps={{\n                shrink: true\n              }}\n              multiline\n              margin=\"normal\"\n            />\n          </div>\n          <Button\n            variant=\"raised\"\n            color=\"primary\"\n            onClick={this.handleSave}\n            disabled={!this.isValid()}\n          >\n            Save\n          </Button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  (state, props) => ({\n    flashcard:\n      state.flashcards.sets[Number(props.match.params.setId) - 1].flashcards[\n        Number(props.match.params.flashcardId) - 1\n      ]\n  }),\n  dispatch => ({\n    updateFlashcard: (flashcard, flashcardIndex, setIndex) =>\n      dispatch(updateFlashcard(flashcard, flashcardIndex, setIndex))\n  })\n)(EditFlashcard);\n","// @flow\nimport * as React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { DIFF_DELETE, DIFF_INSERT, DIFF_EQUAL } from \"diff-match-patch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport { Flashcard, DiffText } from \"../../types\";\nimport Header from \"../../components/Header\";\nimport BackButton from \"../../components/BackButton\";\nimport { getDiffText } from \"../../utils\";\nimport \"./styles.css\";\n\ntype Props = {\n  match: Object,\n  flashcard: ?Flashcard\n};\n\ntype State = {\n  text: string,\n  checked: boolean,\n  correct: ?boolean,\n  diffText: ?(DiffText[])\n};\n\nclass PracticeFlashcard extends React.Component<Props, State> {\n  state = {\n    text: \"\",\n    checked: false,\n    correct: null,\n    diffText: null\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (!this.state.checked && prevState.checked) {\n      this.focusTextInput();\n    }\n  }\n\n  textInput = null;\n\n  setTextInputRef = element => {\n    this.textInput = element;\n  };\n\n  focusTextInput = () => {\n    // Focus the text input using the raw DOM API\n    if (this.textInput) this.textInput.focus();\n  };\n\n  handleChange = (fieldName, event) => {\n    const value = event.target.value;\n\n    this.setState({\n      [fieldName]: value\n    });\n  };\n\n  handleKeyDown = event => {\n    const { checked } = this.state;\n\n    // Submit if SHIFT + ENTER is pressed\n    if (!checked && event.shiftKey && event.key === \"Enter\") {\n      event.preventDefault();\n      this.handleCheck();\n    }\n\n    // Practice again if ENTER is pressed\n    if (checked && event.key === \"Enter\") {\n      event.preventDefault();\n      this.handleAgain();\n    }\n  };\n\n  handleCheck = () => {\n    const { text, checked } = this.state;\n\n    if (checked) {\n      return;\n    }\n\n    const trimmedText = text.trim();\n\n    const diffText = getDiffText(this.props.flashcard.text, trimmedText);\n    const correct = diffText.length === 1 && diffText[0][0] === DIFF_EQUAL;\n\n    this.setState({\n      checked: true,\n      text: trimmedText,\n      correct,\n      diffText\n    });\n  };\n\n  handleAgain = () => {\n    this.setState({\n      text: \"\",\n      checked: false,\n      correct: null,\n      diffText: null\n    });\n  };\n\n  renderDiffText = (diffText: DiffText[], type: \"additions\" | \"deletions\") => {\n    return diffText.map((diffText, index) => {\n      const diffType = diffText[0];\n      const value = diffText[1];\n      const expectedType = type === \"additions\" ? DIFF_INSERT : DIFF_DELETE;\n      const typeClass = type === \"additions\" ? \"diffAddText\" : \"diffDeleteText\";\n\n      if (diffType === DIFF_EQUAL) {\n        return value;\n      }\n\n      if (diffType === expectedType) {\n        return (\n          <span key={index} className={typeClass}>\n            {value}\n          </span>\n        );\n      }\n    });\n  };\n\n  render() {\n    const {\n      match: {\n        params: { setId }\n      }\n    } = this.props;\n    const { text, checked, correct, diffText } = this.state;\n\n    if (!this.props.flashcard) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <React.Fragment>\n        <Header color=\"default\">\n          <BackButton parentURL={`/sets/${setId}`} />\n          <Typography variant=\"subheading\" color=\"inherit\">\n            Practice\n          </Typography>\n        </Header>\n        <div className=\"practiceContent\">\n          <div className=\"practiceForm\">\n            <Typography variant=\"title\" color=\"inherit\">\n              {this.props.flashcard.title}\n            </Typography>\n            {checked && !correct ? (\n              <React.Fragment>\n                <Typography\n                  variant=\"subheading\"\n                  color=\"textSecondary\"\n                  className=\"practiceTextSectionTitle\"\n                >\n                  Correct answer\n                </Typography>\n                <Typography\n                  variant=\"subheading\"\n                  color=\"inherit\"\n                  className=\"practiceTextCorrection\"\n                >\n                  {this.renderDiffText(diffText, \"additions\")}\n                </Typography>\n\n                <Typography\n                  variant=\"subheading\"\n                  color=\"textSecondary\"\n                  className=\"practiceTextSectionTitle\"\n                >\n                  Your answer\n                </Typography>\n                <Typography\n                  variant=\"subheading\"\n                  color=\"default\"\n                  className=\"practiceTextCorrection\"\n                  gutterBottom\n                >\n                  {this.renderDiffText(diffText, \"deletions\")}\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <TextField\n                placeholder=\"Type the text here\"\n                onChange={event => this.handleChange(\"text\", event)}\n                inputRef={this.setTextInputRef}\n                disabled={checked}\n                value={text}\n                spellCheck=\"false\"\n                rows={3}\n                rowsMax={10}\n                autoFocus\n                InputLabelProps={{\n                  shrink: true\n                }}\n                multiline\n                margin=\"normal\"\n              />\n            )}\n          </div>\n          {checked ? (\n            <Button variant=\"raised\" color=\"primary\" onClick={this.handleAgain}>\n              Practice Again\n            </Button>\n          ) : (\n            <Button\n              variant=\"raised\"\n              color=\"primary\"\n              onClick={this.handleCheck}\n              disabled={checked}\n            >\n              Check\n            </Button>\n          )}\n          <Snackbar\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\"\n            }}\n            open={checked}\n            className=\"practiceNotification\"\n            ContentProps={{\n              className: correct\n                ? \"practiceNotificationCorrect\"\n                : \"practiceNotificationIncorrect\"\n            }}\n            transitionDuration={{ exit: 0 }}\n            message={\n              <span>\n                {correct ? \"You are correct!\" : \"Oops, that's not correct\"}\n              </span>\n            }\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect((state, props) => ({\n  flashcard:\n    state.flashcards.sets[Number(props.match.params.setId) - 1].flashcards[\n      Number(props.match.params.flashcardId) - 1\n    ]\n}))(PracticeFlashcard);\n","// @flow\nimport * as React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Home from \"../Home\";\nimport Set from \"../Set\";\nimport NewSet from \"../NewSet\";\nimport NewFlashcard from \"../NewFlashcard\";\nimport EditFlashcard from \"../EditFlashcard\";\nimport PracticeFlashcard from \"../PracticeFlashcard\";\nimport \"./styles.css\";\n\nclass App extends React.Component<{}> {\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <div className=\"App\">\n          <Paper className=\"wrapper\" elevation={24}>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/sets/new\" component={NewSet} />\n              <Route exact path=\"/sets/:setId\" component={Set} />\n              <Route\n                exact\n                path=\"/sets/:setId/flashcards/new\"\n                component={NewFlashcard}\n              />\n              <Route\n                exact\n                path=\"/sets/:setId/flashcards/:flashcardId/practice\"\n                component={PracticeFlashcard}\n              />\n              <Route\n                exact\n                path=\"/sets/:setId/flashcards/:flashcardId/edit\"\n                component={EditFlashcard}\n              />\n              <Redirect to=\"/\" />\n            </Switch>\n          </Paper>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport ScrollMemory from \"react-router-scroll-memory\";\nimport { LastLocationProvider } from \"react-router-last-location\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport \"./index.css\";\nimport { store, persistor } from \"./store\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Router basename=\"/multiline-flashcards\">\n        <React.Fragment>\n          <ScrollMemory elementID=\"scrollingElement\" />\n          <LastLocationProvider>\n            <App />\n          </LastLocationProvider>\n        </React.Fragment>\n      </Router>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}