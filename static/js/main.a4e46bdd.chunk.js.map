{"version":3,"sources":["modules/flashcards.js","modules/index.js","store/index.js","components/Header/index.js","components/EmptyMessage/index.js","utils/index.js","containers/Home/MainMenu/index.js","containers/Home/index.js","components/BackButton/index.js","components/Modal/index.js","components/DeleteModal/index.js","containers/Set/DeleteSetModal/index.js","containers/Set/DeleteFlashcardModal/index.js","containers/Set/index.js","components/GoBack/index.js","containers/NewSet/index.js","containers/NewFlashcard/index.js","containers/EditFlashcard/index.js","containers/PracticeFlashcard/index.js","containers/App/index.js","serviceWorker.js","index.js"],"names":["CREATE_SET","DELETE_SET","UPDATE_SET_TITLE","UPDATE_SETS","CREATE_FLASHCARD","DELETE_FLASHCARD","UPDATE_FLASHCARD","initialState","sets","deleteFlashcard","flashcardIndex","setIndex","type","payload","combineReducers","flashcards","state","arguments","length","undefined","action","newSet","title","Object","objectSpread","toConsumableArray","concat","filter","set","index","map","flashcard","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","Header","_this$props","this","props","children","className","color","react","AppBar_default","a","cx","position","Toolbar_default","React","defaultProps","EmptyMessage","text","Avatar_default","classes","root","index_es","Typography_default","align","normalizeString","string","toLowerCase","trim","findFirstDifferentWord","b","normalizedA","closestWord","left","slice","search","right","word","getClosestWord","findIndex","chr","i","findFirstDifferentIndex","areStringsEqual","maybePluralize","count","noun","suffix","getRandomIntInclusive","min","max","Math","ceil","floor","random","goBack","history","lastLocation","parentURL","shouldPreserveCurrent","pathname","push","replace","MainMenu","anchorEl","handleMenuClick","event","_this","setState","currentTarget","closeMenu","handleImport","files","updateSets","file","reader","FileReader","onload","yaml","safeLoad","result","readAsText","handleExport","yamlString","safeDump","blob","Blob","fileName","moment","format","FileSaver","saveAs","IconButton_default","onClick","MoreVert_default","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","open","Boolean","onClose","upload_dist","onFiles","uploadProps","accept","hover","MenuItem_default","connect","dispatch","Home","deleteModalFlashcardId","handleSetClick","_this2","hasSets","components_Header","variant","Home_MainMenu","List_default","disablePadding","_ref","ListItem_default","button","ListItemText_default","primary","secondary","components_EmptyMessage","Button_default","component","Link","to","Add_default","withRouter","BackButton","handleKeyUp","shiftKey","handleClick","addEventListener","removeEventListener","ArrowBack_default","withLastLocation","Modal","otherProps","objectWithoutProperties","Modal_default","assign","Paper_default","DeleteModal","onDeleteConfirm","components_Modal","DeleteSetModal","handleDeleteConfirm","id","deleteSet","Number","onDeleteSuccess","components_DeleteModal","setId","_this$props2","Set","deleteModalSetId","editingTitle","handleRandomClick","handleDeleteSetClick","match","params","handleDeleteButtonClick","handleDeleteSetModalClose","handleDeleteFlashcardModalClose","handleSetDeleteSuccess","handleFlashcardDeleteSuccess","handleFlashcardClick","handleEditTitleClick","handleTitleChange","value","target","randomFlashcardIndex","handleTitleSubmit","preventDefault","maybeSaveTitle","_this$props3","updateSetTitle","_this$props4","_this$state","Redirect","hasFlashcards","Set_DeleteSetModal","DeleteFlashcardModal","components_BackButton","Delete_default","onSubmit","TextField_default","autoFocus","label","onChange","onBlur","InputLabelProps","shrink","margin","ModeEdit_default","disabled","size","Divider_default","stopPropagation","GoBack","NewSet","saved","isValid","handleSave","createSet","_this$state2","components_GoBack","placeholder","NewFlashcard","handleChange","fieldName","defineProperty","createFlashcard","_this$state3","rows","rowsMax","multiline","EditFlashcard","hasChanged","flashcardId","updateFlashcard","PracticeFlashcard","checked","correct","firstDifferentWord","textInput","setTextInputRef","element","focusTextInput","focus","handleCheck","handleAgain","prevProps","prevState","snapshot","gutterBottom","inputRef","spellCheck","Snackbar_default","ContentProps","transitionDuration","exit","message","App","CssBaseline_default","elevation","Switch","Route","exact","path","isLocalhost","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","react_default","createElement","es","integration_react","loading","BrowserRouter","basename","Fragment","ScrollMemory_min_default","elementID","dist","containers_App","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a4e46bdd.chunk.js","sourcesContent":["// @flow\nimport type { Set, Flashcard } from \"../types\";\n\nconst CREATE_SET = \"flashcards/CREATE_SET\";\nconst DELETE_SET = \"flashcards/DELETE_SET\";\nconst UPDATE_SET_TITLE = \"flashcards/UPDATE_SET_TITLE\";\nconst UPDATE_SETS = \"flashcards/UPDATE_SETS\";\n\nconst CREATE_FLASHCARD = \"flashcards/CREATE_FLASHCARD\";\nconst DELETE_FLASHCARD = \"flashcards/DELETE_FLASHCARD\";\nconst UPDATE_FLASHCARD = \"flashcards/UPDATE_FLASHCARD\";\n\ntype State = {\n  sets: Set[]\n};\n\nconst initialState: State = {\n  sets: []\n};\n\n/**\n * Reducer\n */\nexport default function reducer(state: State = initialState, action: Object) {\n  switch (action.type) {\n    case CREATE_SET: {\n      const newSet = { title: action.payload.title, flashcards: [] };\n\n      return {\n        ...state,\n        sets: [...state.sets, newSet]\n      };\n    }\n    case DELETE_SET:\n      return {\n        ...state,\n        sets: state.sets.filter((set, index) => index !== action.payload.index)\n      };\n    case UPDATE_SET_TITLE:\n      return {\n        ...state,\n        sets: state.sets.map((set, index) => {\n          if (index === action.payload.index) {\n            return { ...set, title: action.payload.title };\n          }\n\n          return set;\n        })\n      };\n    case UPDATE_SETS:\n      return { ...state, sets: action.payload.sets };\n    case CREATE_FLASHCARD:\n      return {\n        ...state,\n        sets: state.sets.map((set, index) => {\n          if (index === action.payload.setIndex) {\n            return {\n              ...set,\n              flashcards: [...set.flashcards, action.payload.flashcard]\n            };\n          }\n\n          return set;\n        })\n      };\n    case DELETE_FLASHCARD:\n      return {\n        ...state,\n        sets: state.sets.map((set, index) => {\n          if (index === action.payload.setIndex) {\n            return {\n              ...set,\n              flashcards: set.flashcards.filter(\n                (flashcard, index) => index !== action.payload.flashcardIndex\n              )\n            };\n          }\n\n          return set;\n        })\n      };\n    case UPDATE_FLASHCARD:\n      return {\n        ...state,\n\n        sets: state.sets.map((set, index) => {\n          if (index === action.payload.setIndex) {\n            return {\n              ...set,\n              flashcards: set.flashcards.map((flashcard, index) => {\n                if (index === action.payload.flashcardIndex) {\n                  return action.payload.flashcard;\n                }\n\n                return flashcard;\n              })\n            };\n          }\n\n          return set;\n        })\n      };\n    default:\n      return state;\n  }\n}\n\nexport function createSet(title: string) {\n  return {\n    type: CREATE_SET,\n    payload: {\n      title\n    }\n  };\n}\n\nexport function deleteSet(index: number) {\n  return {\n    type: DELETE_SET,\n    payload: {\n      index\n    }\n  };\n}\n\nexport function updateSetTitle(index: number, title: string) {\n  return {\n    type: UPDATE_SET_TITLE,\n    payload: {\n      index,\n      title\n    }\n  };\n}\n\nexport function createFlashcard(flashcard: Flashcard, setIndex: number) {\n  return {\n    type: CREATE_FLASHCARD,\n    payload: {\n      flashcard,\n      setIndex\n    }\n  };\n}\n\nexport function deleteFlashcard(flashcardIndex: number, setIndex: number) {\n  return {\n    type: DELETE_FLASHCARD,\n    payload: {\n      flashcardIndex,\n      setIndex\n    }\n  };\n}\n\nexport function updateFlashcard(\n  flashcard: Flashcard,\n  flashcardIndex: number,\n  setIndex: number\n) {\n  return {\n    type: UPDATE_FLASHCARD,\n    payload: {\n      flashcard,\n      flashcardIndex,\n      setIndex\n    }\n  };\n}\n\nexport function updateSets(sets: Set[]) {\n  return {\n    type: UPDATE_SETS,\n    payload: {\n      sets\n    }\n  };\n}\n","// @flow\nimport { combineReducers } from \"redux\";\n\nimport flashcards from \"./flashcards\";\n\nexport default combineReducers({\n  flashcards\n});\n","// @flow\nimport { createStore } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport rootReducer from \"../modules\";\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(\n  persistedReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport const persistor = persistStore(store);\n","// @flow\nimport * as React from \"react\";\nimport cx from \"classnames\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nimport \"./styles.css\";\n\ntype Props = {\n  children: React.Node,\n  className: string,\n  color: string\n};\n\nclass Header extends React.Component<Props> {\n  static defaultProps = {\n    className: \"\",\n    color: \"primary\"\n  };\n\n  render() {\n    const { children, className, color } = this.props;\n\n    return (\n      <AppBar\n        className={cx(\"appBar\", className)}\n        position=\"sticky\"\n        color={color}\n      >\n        <Toolbar className=\"smallToolbar\">{children}</Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default Header;\n","// @flow\nimport * as React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Cards } from \"mdi-material-ui\";\n\nimport \"./styles.css\";\n\ntype Props = {\n  text: string\n};\n\nclass EmptyMessage extends React.Component<Props> {\n  static defaultProps = {\n    text: \"You have no flashcards. Tap the Add Button to create a new one.\"\n  };\n\n  render() {\n    const { text } = this.props;\n\n    return (\n      <div className=\"emptyMessage\">\n        <Avatar\n          classes={{\n            root: \"emptyMessageAvatar\"\n          }}\n        >\n          <Cards className=\"emptyMessageIcon\" />\n        </Avatar>\n        <Typography align=\"center\" color=\"textSecondary\">\n          You have no flashcards. Tap the Add Button to create a new set\n        </Typography>\n      </div>\n    );\n  }\n}\n\nexport default EmptyMessage;\n","// @flow\nimport type { WordInString } from \"../types\";\n\n/**\n * Find the word located in the string with a numeric index.\n * Also, return the left and right index of the word.\n */\nconst getClosestWord = (string: string, index: number): WordInString => {\n  // Search for the word's beginning and end.\n  // If the index is a white space, the word matched is the last one.\n  const left = string.slice(0, index + 1).search(/\\S+\\s?$/);\n  let right = string.slice(index).search(/\\s/);\n\n  // handle no whitespace after the word (final word)\n  if (right === -1) {\n    right = string.length - index;\n  }\n\n  // Get the word, using the located bounds to extract it from the string.\n  const word = string.slice(left, right + index);\n  return { word, left, right: right + index };\n};\n\nconst normalizeString = (string: string) => {\n  return string.toLowerCase().trim();\n};\n\n/**\n * Find the index of the of the first difference in two string.\n */\nconst findFirstDifferentIndex = (a: string, b: string) => {\n  if (a.length < b.length) [a, b] = [b, a];\n  return [...a].findIndex((chr, i) => chr !== b[i]);\n};\n\n/**\n * Find the first different word in two string.\n */\nexport const findFirstDifferentWord = (a: string, b: string) => {\n  const normalizedA = normalizeString(a);\n  const normalizedB = normalizeString(b);\n\n  const closestWord = getClosestWord(\n    normalizedA,\n    findFirstDifferentIndex(normalizedA, normalizedB)\n  );\n\n  // we update the word to be in it's un-normalized state\n  return { ...closestWord, word: a.slice(closestWord.left, closestWord.right) };\n};\n\n/**\n * Find the first different word in two string.\n */\nexport const areStringsEqual = (a: string, b: string) => {\n  return normalizeString(a) === normalizeString(b);\n};\n\n/**\n * Pluralize noun if appropriate\n */\nexport const maybePluralize = (\n  count: number,\n  noun: string,\n  suffix: string = \"s\"\n) => `${count} ${noun}${count !== 1 ? suffix : \"\"}`;\n\n/**\n * Reutrns a random integer between two values, inclusive\n */\nexport const getRandomIntInclusive = (min: number, max: number) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\n/**\n * Navigates back to the hierarchical parent URL.\n *\n * Navigates back with history.goBack() if last history state is also the hierarchical parent.\n * Otherwise navigates with history.push() or history.replace()\n *\n * RATIONALE:\n *\n * There are 2 ways to navigate back in an app:\n * 1) The APP navigation:\n *      - A back button or any programmatic in-app navigation.\n *      - Navigates based on the HIERARCHICAL order of pages.\n *      - Done by pushing an entry to the browser history. (*)\n * 2) The SYSTEM navigation:\n *      - The browser/mobile-OS back button.\n *      - Navigates based on the CHRONOLOGICAL order of pages.\n *      - Done by going to the previous entry in browser history.\n *\n * This function should be called every time the app wants to navigate to the parent URL. It handles\n * one edge case:\n *\n * (*) If the HIERARCHICAL and CHRONOLOGICAL previous pages are the same, then the navigation should be\n * made with history.goBack() instead of history.push(). This is because the UX is more consistent and\n * preserves the scroll positions.\n *\n * Based on https://developer.android.com/training/design-navigation/ancestral-temporal\n */\nexport const goBack = (\n  history: Object,\n  lastLocation: Object | null,\n  parentURL: string,\n  shouldPreserveCurrent: boolean = true\n) => {\n  const lastLocationIsParentURL =\n    lastLocation && lastLocation.pathname === parentURL;\n\n  if (lastLocationIsParentURL) {\n    history.goBack();\n  } else {\n    if (shouldPreserveCurrent) {\n      history.push(parentURL);\n    } else {\n      history.replace(parentURL);\n    }\n  }\n};\n","// @flow\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport yaml from \"js-yaml\";\nimport FileSaver from \"file-saver\";\nimport moment from \"moment\";\n\nimport { UploadField } from \"@navjobs/upload\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\nimport { updateSets } from \"../../../modules/flashcards\";\nimport { Set } from \"../../../types\";\n\nimport \"./styles.css\";\n\ntype Props = {\n  sets: Set[],\n  updateSets: Function\n};\n\ntype State = {\n  anchorEl: ?HTMLElement\n};\n\nclass MainMenu extends React.Component<Props, State> {\n  state = {\n    anchorEl: null\n  };\n\n  static defaultProps = {\n    sets: []\n  };\n\n  handleMenuClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  closeMenu = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  handleImport = files => {\n    const { updateSets } = this.props;\n\n    const file = files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      const flashcards = yaml.safeLoad(reader.result);\n      updateSets(flashcards.sets);\n    };\n    reader.readAsText(file);\n\n    this.closeMenu();\n  };\n\n  handleExport = () => {\n    const { sets } = this.props;\n\n    const yamlString = yaml.safeDump({ sets });\n    const blob = new Blob([yamlString], { type: \"text/plain;charset=utf-8\" });\n    const fileName = `flashcards-${moment().format(\"Y-M-D\")}.yaml`;\n    FileSaver.saveAs(blob, fileName);\n\n    this.closeMenu();\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n\n    return (\n      <React.Fragment>\n        <IconButton\n          className=\"menuIcon\"\n          color=\"inherit\"\n          onClick={this.handleMenuClick}\n        >\n          <MoreVertIcon />\n        </IconButton>\n        <Menu\n          anchorEl={anchorEl}\n          anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n          transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n          open={Boolean(anchorEl)}\n          onClose={this.closeMenu}\n        >\n          <UploadField\n            onFiles={this.handleImport}\n            uploadProps={{\n              accept: \".yaml\"\n            }}\n          >\n            {hover => (\n              <MenuItem\n                classes={{\n                  root: hover ? \"uploadFieldHover\" : null\n                }}\n              >\n                Import Data\n              </MenuItem>\n            )}\n          </UploadField>\n          <MenuItem onClick={this.handleExport}>Export Data</MenuItem>\n        </Menu>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    sets: state.flashcards.sets\n  }),\n  dispatch => ({\n    updateSets: sets => dispatch(updateSets(sets))\n  })\n)(MainMenu);\n","// @flow\nimport * as React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Cards } from \"mdi-material-ui\";\n\nimport { deleteFlashcard } from \"../../modules/flashcards\";\nimport { Set } from \"../../types\";\nimport Header from \"../../components/Header\";\nimport EmptyMessage from \"../../components/EmptyMessage\";\nimport { maybePluralize } from \"../../utils\";\n\nimport MainMenu from \"./MainMenu\";\nimport \"./styles.css\";\n\ntype Props = {\n  sets: Set[],\n  history: Object\n};\n\ntype State = {\n  // Id of Flashcard to show in Delete modal, if any\n  deleteModalFlashcardId: number | null\n};\n\nclass Home extends React.Component<Props, State> {\n  static defaultProps = {\n    sets: []\n  };\n\n  state = {\n    deleteModalFlashcardId: null\n  };\n\n  handleSetClick = index => {\n    const { history } = this.props;\n\n    history.push(`/sets/${index + 1}`);\n  };\n\n  render() {\n    const { sets } = this.props;\n\n    const hasSets = sets.length !== 0;\n\n    return (\n      <React.Fragment>\n        <Header>\n          <Typography\n            variant=\"headline\"\n            color=\"inherit\"\n            className=\"appBarTitle\"\n          >\n            Multiline Flashcards\n          </Typography>\n          <MainMenu />\n        </Header>\n        <div className=\"textsContainer\">\n          {hasSets ? (\n            <React.Fragment>\n              <Typography variant=\"title\" className=\"content\">\n                Sets\n              </Typography>\n              <List disablePadding>\n                {sets.map(({ title, flashcards }, index) => {\n                  return (\n                    <ListItem\n                      button\n                      key={index}\n                      onClick={() => this.handleSetClick(index)}\n                    >\n                      <Avatar>\n                        <Cards />\n                      </Avatar>\n                      <ListItemText\n                        primary={title}\n                        secondary={maybePluralize(\n                          flashcards.length,\n                          \"flashcard\"\n                        )}\n                      />\n                    </ListItem>\n                  );\n                })}\n              </List>\n            </React.Fragment>\n          ) : (\n            <EmptyMessage\n              text={\n                \"You have no flashcards. Tap the Add Button to create a new set\"\n              }\n            />\n          )}\n          <Button\n            className=\"addButton\"\n            component={Link}\n            to=\"/sets/new\"\n            variant=\"fab\"\n            color=\"secondary\"\n          >\n            <AddIcon />\n          </Button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(\n  connect(\n    state => ({\n      sets: state.flashcards.sets\n    }),\n    dispatch => ({\n      deleteFlashcard: index => dispatch(deleteFlashcard(index))\n    })\n  )(Home)\n);\n","// @flow\nimport * as React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { withLastLocation } from \"react-router-last-location\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\n\nimport { goBack } from \"../../utils\";\n\ntype Props = {\n  className: string,\n  parentURL: string,\n  history: Object,\n  lastLocation: Object | null\n};\n\nclass BackButton extends React.Component<Props> {\n  static defaultProps = {\n    className: \"\",\n    parentURL: \"/\"\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"keyup\", this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keyup\", this.handleKeyUp);\n  }\n\n  goBack = () => {\n    const { history, lastLocation, parentURL } = this.props;\n\n    goBack(history, lastLocation, parentURL);\n  };\n\n  handleKeyUp = event => {\n    // \"Click\" if ALT + ArrowLeft is pressed\n    if (event.shiftKey && event.key === \"ArrowLeft\") {\n      this.goBack();\n    }\n  };\n\n  handleClick = () => this.goBack();\n\n  render() {\n    const { className } = this.props;\n\n    return (\n      <IconButton\n        className={className}\n        color=\"inherit\"\n        onClick={this.handleClick}\n      >\n        <ArrowBack />\n      </IconButton>\n    );\n  }\n}\n\nexport default withLastLocation(withRouter(BackButton));\n","// @flow\nimport * as React from \"react\";\nimport cx from \"classnames\";\nimport MaterialUIModal from \"@material-ui/core/Modal\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport \"./styles.css\";\n\ntype Props = {\n  children: React.Node,\n  className: string,\n\n  // props used by material-ui's Modal component\n  open: boolean,\n  onClose: Function\n};\n\nclass Modal extends React.Component<Props> {\n  static defaultProps = {\n    className: \"\",\n    open: true\n  };\n\n  render() {\n    const { children, className, onClose, open, ...otherProps } = this.props;\n\n    return (\n      <MaterialUIModal onClose={onClose} open={open} {...otherProps}>\n        <Paper className={cx(\"modal\", className)}>{children}</Paper>\n      </MaterialUIModal>\n    );\n  }\n}\n\nexport default Modal;\n","// @flow\nimport * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Modal from \"../Modal\";\n\nimport \"./styles.css\";\n\ntype ObjectType = \"flashcard\" | \"set\";\n\ntype Props = {\n  type: ObjectType,\n  title: string | null,\n  open: boolean,\n  onClose: Function,\n  onDeleteConfirm: Function\n};\n\nclass DeleteModal extends React.Component<Props> {\n  render() {\n    const {\n      type,\n      title,\n      open,\n      onClose,\n      onDeleteConfirm,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <Modal onClose={onClose} open={open} {...otherProps}>\n        <React.Fragment>\n          <Typography variant=\"subheading\">\n            Are you sure you want to delete the {type} {`\"${title}\"?`}\n          </Typography>\n          <div className=\"modalButtonsContainer\">\n            <Button onClick={onClose}>Cancel</Button>\n            <Button variant=\"raised\" color=\"primary\" onClick={onDeleteConfirm}>\n              Delete\n            </Button>\n          </div>\n        </React.Fragment>\n      </Modal>\n    );\n  }\n}\n\nexport default DeleteModal;\n","// @flow\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteSet } from \"../../../modules/flashcards\";\nimport DeleteModal from \"../../../components/DeleteModal\";\nimport { Set } from \"../../../types\";\n\ntype Props = {\n  id: number,\n  onClose: Function,\n  onDeleteSuccess: Function,\n  set: Set,\n  deleteSet: Function\n};\n\nclass DeleteSetModal extends React.Component<Props, State> {\n  handleDeleteConfirm = () => {\n    const { id } = this.props;\n\n    this.props.deleteSet(Number(id) - 1);\n    this.props.onDeleteSuccess();\n  };\n\n  render() {\n    const { id, set, onClose } = this.props;\n\n    return (\n      <DeleteModal\n        type=\"set\"\n        title={set ? set.title : null}\n        open={id !== null}\n        onClose={onClose}\n        onDeleteConfirm={this.handleDeleteConfirm}\n      />\n    );\n  }\n}\n\nexport default connect(\n  (state, props) => ({\n    set: props.id ? state.flashcards.sets[Number(props.id) - 1] : null\n  }),\n  dispatch => ({\n    deleteSet: index => dispatch(deleteSet(index))\n  })\n)(DeleteSetModal);\n","// @flow\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteFlashcard } from \"../../../modules/flashcards\";\nimport DeleteModal from \"../../../components/DeleteModal\";\nimport type { Flashcard } from \"../../../types\";\n\ntype Props = {\n  id: number,\n  setId: number,\n  onClose: Function,\n  onDeleteSuccess: Function,\n  flashcard: Flashcard,\n  deleteFlashcard: Function\n};\n\nclass DeleteSetModal extends React.Component<Props, State> {\n  handleDeleteConfirm = () => {\n    const { id, setId } = this.props;\n\n    this.props.deleteFlashcard(id, Number(setId) - 1);\n    this.props.onDeleteSuccess();\n  };\n\n  render() {\n    const { id, setId, flashcard, onClose } = this.props;\n\n    return (\n      <DeleteModal\n        type=\"flashcard\"\n        title={flashcard ? flashcard.title : null}\n        open={id !== null}\n        onClose={onClose}\n        onDeleteConfirm={this.handleDeleteConfirm}\n      />\n    );\n  }\n}\n\nexport default connect(\n  (state, props) => ({\n    flashcard:\n      props.id !== null\n        ? state.flashcards.sets[Number(props.setId) - 1].flashcards[props.id]\n        : null\n  }),\n  dispatch => ({\n    deleteFlashcard: (index, setIndex) =>\n      dispatch(deleteFlashcard(index, setIndex))\n  })\n)(DeleteSetModal);\n","// @flow\nimport * as React from \"react\";\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ModeEditIcon from \"@material-ui/icons/ModeEdit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Dice5 } from \"mdi-material-ui\";\n\nimport BackButton from \"../../components/BackButton\";\nimport { deleteFlashcard, updateSetTitle } from \"../../modules/flashcards\";\nimport { Flashcard } from \"../../types\";\nimport Header from \"../../components/Header\";\nimport EmptyMessage from \"../../components/EmptyMessage\";\nimport { maybePluralize, getRandomIntInclusive } from \"../../utils\";\nimport DeleteSetModal from \"./DeleteSetModal\";\nimport DeleteFlashcardModal from \"./DeleteFlashcardModal\";\nimport \"./styles.css\";\n\ntype Props = {\n  flashcards: Flashcard[],\n  deleteFlashcard: Function,\n  deleteSet: Function,\n  history: Object,\n  match: Object\n};\n\ntype State = {\n  // Id of Flashcard to show in Delete modal, if any\n  deleteModalFlashcardId: number | null,\n  // Id of Set to show in Delete modal, if any\n  deleteModalSetId: number | null,\n  // true if the title set is being edited\n  editingTitle: boolean,\n  // title being edited\n  title: string\n};\n\nclass Set extends React.Component<Props, State> {\n  static defaultProps = {\n    flashcards: []\n  };\n\n  state = {\n    deleteModalFlashcardId: null,\n    deleteModalSetId: null,\n    editingTitle: false,\n    title: this.props.set.title\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"keyup\", this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keyup\", this.handleKeyUp);\n  }\n\n  handleKeyUp = event => {\n    // \"Click\" random when \"r\" is pressed\n    if (event.key === \"r\") {\n      this.handleRandomClick();\n    }\n  };\n\n  handleDeleteSetClick = () => {\n    const {\n      match: {\n        params: { setId }\n      }\n    } = this.props;\n\n    this.setState({ deleteModalSetId: setId });\n  };\n\n  handleDeleteButtonClick = flashcardIndex => {\n    this.setState({ deleteModalFlashcardId: flashcardIndex });\n  };\n\n  handleDeleteSetModalClose = () => {\n    this.setState({ deleteModalSetId: null });\n  };\n\n  handleDeleteFlashcardModalClose = () => {\n    this.setState({ deleteModalFlashcardId: null });\n  };\n\n  handleSetDeleteSuccess = () => {\n    const { history } = this.props;\n\n    history.push(`/`);\n  };\n\n  handleFlashcardDeleteSuccess = () => {\n    this.setState({ deleteModalFlashcardId: null });\n  };\n\n  handleFlashcardClick = index => {\n    const {\n      history,\n      match: {\n        params: { setId }\n      }\n    } = this.props;\n\n    history.push(`/sets/${setId}/flashcards/${index + 1}/practice`);\n  };\n\n  handleEditTitleClick = () => {\n    this.setState(state => ({\n      editingTitle: !state.editingTitle\n    }));\n  };\n\n  handleTitleChange = event => {\n    const value = event.target.value;\n\n    this.setState({\n      title: value\n    });\n  };\n\n  handleRandomClick = () => {\n    const {\n      history,\n      set: { flashcards },\n      match: {\n        params: { setId }\n      }\n    } = this.props;\n\n    if (flashcards.length <= 1) {\n      return;\n    }\n\n    const randomFlashcardIndex = getRandomIntInclusive(\n      0,\n      flashcards.length - 1\n    );\n\n    history.push(\n      `/sets/${setId}/flashcards/${randomFlashcardIndex + 1}/practice`\n    );\n  };\n\n  handleTitleSubmit = event => {\n    event.preventDefault();\n    this.maybeSaveTitle();\n  };\n\n  maybeSaveTitle = () => {\n    const { title } = this.state;\n    const {\n      match: {\n        params: { setId }\n      },\n      set: { title: oldTitle }\n    } = this.props;\n\n    if (title !== oldTitle && title.trim()) {\n      this.props.updateSetTitle(Number(setId) - 1, title);\n    }\n\n    this.setState({\n      title: title,\n      editingTitle: false\n    });\n  };\n\n  render() {\n    const {\n      set,\n      match: {\n        params: { setId }\n      }\n    } = this.props;\n    const {\n      deleteModalFlashcardId,\n      deleteModalSetId,\n      editingTitle,\n      title\n    } = this.state;\n\n    if (!set) {\n      return <Redirect push to=\"/\" />;\n    }\n\n    const flashcards = set.flashcards;\n    const hasFlashcards = flashcards.length !== 0;\n\n    return (\n      <React.Fragment>\n        <DeleteSetModal\n          id={deleteModalSetId}\n          onClose={this.handleDeleteSetModalClose}\n          onDeleteSuccess={this.handleSetDeleteSuccess}\n        />\n        <DeleteFlashcardModal\n          id={deleteModalFlashcardId}\n          setId={setId}\n          onClose={this.handleDeleteFlashcardModalClose}\n          onDeleteSuccess={this.handleFlashcardDeleteSuccess}\n        />\n        <Header>\n          <BackButton className=\"menuIconLeft\" />\n          <Typography\n            variant=\"headline\"\n            color=\"inherit\"\n            className=\"appBarTitle\"\n          >\n            Set\n          </Typography>\n          <IconButton\n            className=\"menuIcon\"\n            color=\"inherit\"\n            onClick={this.handleDeleteSetClick}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Header>\n        <div className=\"setInfo\">\n          <div className=\"titleContainer\">\n            {editingTitle ? (\n              <form onSubmit={this.handleTitleSubmit}>\n                <TextField\n                  autoFocus\n                  label=\"Title\"\n                  onChange={this.handleTitleChange}\n                  onBlur={this.maybeSaveTitle}\n                  value={title}\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"normal\"\n                />\n              </form>\n            ) : (\n              <Typography variant=\"title\">{set.title}</Typography>\n            )}\n            <IconButton\n              color={editingTitle ? \"primary\" : \"inherit\"}\n              onClick={this.handleEditTitleClick}\n              classes={{ root: \"editTitleButton\" }}\n            >\n              <ModeEditIcon />\n            </IconButton>\n          </div>\n          <Typography variant=\"subheading\" color=\"textSecondary\">\n            {maybePluralize(flashcards.length, \"flashcard\")}\n          </Typography>\n          {hasFlashcards && (\n            <div className=\"setButtonContainer\">\n              <Button\n                disabled={flashcards.length <= 1}\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"small\"\n                onClick={this.handleRandomClick}\n              >\n                Random\n                <Dice5 className=\"iconRight\" />\n              </Button>\n            </div>\n          )}\n        </div>\n        <Divider />\n        <div className=\"textsContainer\" id=\"scrollingElement\">\n          {hasFlashcards ? (\n            <List disablePadding>\n              {flashcards.map(({ title }, index) => {\n                return (\n                  <ListItem\n                    button\n                    key={index}\n                    onClick={() => this.handleFlashcardClick(index)}\n                  >\n                    <ListItemText primary={title} />\n                    <IconButton\n                      onClick={event => {\n                        event.stopPropagation();\n                      }}\n                      component={Link}\n                      to={`/sets/${setId}/flashcards/${index + 1}/edit`}\n                    >\n                      <ModeEditIcon />\n                    </IconButton>\n\n                    <IconButton\n                      onClick={event => {\n                        event.stopPropagation();\n                        this.handleDeleteButtonClick(index);\n                      }}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </ListItem>\n                );\n              })}\n            </List>\n          ) : (\n            <EmptyMessage />\n          )}\n          <Button\n            className=\"addButton\"\n            component={Link}\n            to={`/sets/${setId}/flashcards/new`}\n            variant=\"fab\"\n            color=\"secondary\"\n          >\n            <AddIcon />\n          </Button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(\n  connect(\n    (state, props) => ({\n      set: state.flashcards.sets[Number(props.match.params.setId) - 1]\n    }),\n    dispatch => ({\n      deleteFlashcard: index => dispatch(deleteFlashcard(index)),\n      updateSetTitle: (index, title) => dispatch(updateSetTitle(index, title))\n    })\n  )(Set)\n);\n","// @flow\nimport * as React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { withLastLocation } from \"react-router-last-location\";\n\nimport { goBack } from \"../../utils\";\n\ntype Props = {\n  parentURL: string,\n  history: Object,\n  lastLocation: Object | null\n};\n\n/**\n * Navigates back (hierarchically) in the app\n */\nclass GoBack extends React.Component<Props> {\n  static defaultProps = {\n    parentURL: \"/\"\n  };\n\n  goBack = () => {\n    const { history, lastLocation, parentURL } = this.props;\n\n    goBack(history, lastLocation, parentURL);\n  };\n\n  componentDidMount() {\n    this.goBack();\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withLastLocation(withRouter(GoBack));\n","// @flow\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport BackButton from \"../../components/BackButton\";\nimport GoBack from \"../../components/GoBack\";\nimport { createSet } from \"../../modules/flashcards\";\nimport Header from \"../../components/Header\";\nimport \"./styles.css\";\n\ntype Props = {\n  createSet: Function\n};\n\ntype State = {\n  title: string,\n  saved: boolean\n};\n\nclass NewSet extends React.Component<Props, State> {\n  state = {\n    title: \"\",\n    saved: false\n  };\n\n  isValid = () => {\n    const { title, saved } = this.state;\n\n    return title.trim() && !saved;\n  };\n\n  handleTitleChange = event => {\n    const value = event.target.value;\n\n    this.setState({\n      title: value\n    });\n  };\n\n  handleSave = event => {\n    const { title } = this.state;\n\n    event.preventDefault();\n\n    if (!this.isValid()) {\n      return;\n    }\n\n    this.props.createSet(title);\n    this.setState({\n      saved: true\n    });\n  };\n\n  render() {\n    const { title, saved } = this.state;\n\n    if (saved) {\n      return <GoBack to=\"/\" />;\n    }\n\n    return (\n      <React.Fragment>\n        <Header color=\"default\">\n          <BackButton />\n          <Typography variant=\"subheading\" color=\"inherit\">\n            New Set\n          </Typography>\n        </Header>\n        <form className=\"newFlashcardContent\" onSubmit={this.handleSave}>\n          <div className=\"newFlashcardForm\">\n            <TextField\n              label=\"Title\"\n              placeholder=\"Add the title...\"\n              onChange={event => this.handleTitleChange(event)}\n              value={title}\n              InputLabelProps={{\n                shrink: true\n              }}\n              margin=\"normal\"\n            />\n          </div>\n          <Button\n            variant=\"raised\"\n            color=\"primary\"\n            onClick={this.handleSave}\n            disabled={!this.isValid()}\n          >\n            Save\n          </Button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  dispatch => ({\n    createSet: text => dispatch(createSet(text))\n  })\n)(NewSet);\n","// @flow\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport BackButton from \"../../components/BackButton\";\nimport GoBack from \"../../components/GoBack\";\nimport { createFlashcard } from \"../../modules/flashcards\";\nimport Header from \"../../components/Header\";\nimport \"./styles.css\";\n\ntype Props = {\n  createFlashcard: Function,\n  history: Object,\n  lastLocation: Object | null\n};\n\ntype State = {\n  title: string,\n  text: string,\n  saved: boolean,\n  match: Object\n};\n\nclass NewFlashcard extends React.Component<Props, State> {\n  state = {\n    title: \"\",\n    text: \"\",\n    saved: false\n  };\n\n  isValid = () => {\n    const { title, text, saved } = this.state;\n\n    return title.trim() && text.trim() && !saved;\n  };\n\n  handleChange = (fieldName, event) => {\n    const value = event.target.value;\n\n    this.setState({\n      [fieldName]: value\n    });\n  };\n\n  handleSave = () => {\n    const {\n      match: {\n        params: { setId }\n      }\n    } = this.props;\n    const { title, text } = this.state;\n\n    if (!this.isValid()) {\n      return;\n    }\n\n    this.props.createFlashcard({ title, text }, Number(setId - 1));\n    this.setState({\n      saved: true\n    });\n  };\n\n  render() {\n    const {\n      match: {\n        params: { setId }\n      }\n    } = this.props;\n    const { title, text, saved } = this.state;\n\n    if (saved) {\n      return <GoBack parentURL={`/sets/${setId}`} />;\n    }\n\n    return (\n      <React.Fragment>\n        <Header color=\"default\">\n          <BackButton parentURL={`/sets/${setId}`} />\n          <Typography variant=\"subheading\" color=\"inherit\">\n            New Flashcard\n          </Typography>\n        </Header>\n        <div className=\"newFlashcardContent\">\n          <div className=\"newFlashcardForm\">\n            <TextField\n              label=\"Title\"\n              placeholder=\"Add the title...\"\n              onChange={event => this.handleChange(\"title\", event)}\n              value={title}\n              InputLabelProps={{\n                shrink: true\n              }}\n              margin=\"normal\"\n            />\n            <TextField\n              label=\"Text\"\n              placeholder=\"Add the text...\"\n              onChange={event => this.handleChange(\"text\", event)}\n              value={text}\n              rows={3}\n              rowsMax={10}\n              InputLabelProps={{\n                shrink: true\n              }}\n              multiline\n              margin=\"normal\"\n            />\n          </div>\n          <Button\n            variant=\"raised\"\n            color=\"primary\"\n            onClick={this.handleSave}\n            disabled={!this.isValid()}\n          >\n            Save\n          </Button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  dispatch => ({\n    createFlashcard: (flashcard, index) =>\n      dispatch(createFlashcard(flashcard, index))\n  })\n)(NewFlashcard);\n","// @flow\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport BackButton from \"../../components/BackButton\";\nimport GoBack from '../../components/GoBack';\nimport { updateFlashcard } from \"../../modules/flashcards\";\nimport { Flashcard } from \"../../types\";\nimport Header from \"../../components/Header\";\nimport \"./styles.css\";\n\ntype Props = {\n  updateFlashcard: Function,\n  match: Object,\n  flashcard: ?Flashcard\n};\n\ntype State = {\n  title: string,\n  text: string,\n  saved: boolean\n};\n\nclass EditFlashcard extends React.Component<Props, State> {\n  state = {\n    title: this.props.flashcard ? this.props.flashcard.title : \"\",\n    text: this.props.flashcard ? this.props.flashcard.text : \"\",\n    saved: false\n  };\n\n  isValid = () => {\n    const { title, text, saved } = this.state;\n\n    const hasChanged =\n      this.props.flashcard.title !== title ||\n      this.props.flashcard.text !== text;\n\n    return title.trim() && text.trim() && !saved && hasChanged;\n  };\n\n  handleChange = (fieldName, event) => {\n    const value = event.target.value;\n\n    this.setState({\n      [fieldName]: value\n    });\n  };\n\n  handleSave = () => {\n    const { match } = this.props;\n    const { title, text } = this.state;\n\n    if (!this.isValid()) {\n      return;\n    }\n\n    const flashcardIndex = Number(match.params.flashcardId) - 1;\n    const setIndex = Number(match.params.setId) - 1;\n    this.props.updateFlashcard({ title, text }, flashcardIndex, setIndex);\n    this.setState({\n      saved: true\n    });\n  };\n\n  render() {\n    const {\n      match: {\n        params: { setId }\n      }\n    } = this.props;\n    const { title, text, saved } = this.state;\n\n    if (saved || !this.props.flashcard) {\n      return <GoBack to={`/sets/${setId}`} />;\n    }\n\n    return (\n      <React.Fragment>\n        <Header color=\"default\">\n          <BackButton />\n          <Typography variant=\"subheading\" color=\"inherit\">\n            Edit Flashcard\n          </Typography>\n        </Header>\n        <div className=\"newFlashcardContent\">\n          <div className=\"newFlashcardForm\">\n            <TextField\n              label=\"Title\"\n              placeholder=\"Add the title...\"\n              onChange={event => this.handleChange(\"title\", event)}\n              value={title}\n              InputLabelProps={{\n                shrink: true\n              }}\n              margin=\"normal\"\n            />\n            <TextField\n              label=\"Text\"\n              placeholder=\"Add the text...\"\n              onChange={event => this.handleChange(\"text\", event)}\n              value={text}\n              rows={3}\n              rowsMax={10}\n              InputLabelProps={{\n                shrink: true\n              }}\n              multiline\n              margin=\"normal\"\n            />\n          </div>\n          <Button\n            variant=\"raised\"\n            color=\"primary\"\n            onClick={this.handleSave}\n            disabled={!this.isValid()}\n          >\n            Save\n          </Button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  (state, props) => ({\n    flashcard:\n      state.flashcards.sets[Number(props.match.params.setId) - 1].flashcards[\n        Number(props.match.params.flashcardId) - 1\n      ]\n  }),\n  dispatch => ({\n    updateFlashcard: (flashcard, flashcardIndex, setIndex) =>\n      dispatch(updateFlashcard(flashcard, flashcardIndex, setIndex))\n  })\n)(EditFlashcard);\n","// @flow\nimport * as React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport { Flashcard, WordInString } from \"../../types\";\nimport Header from \"../../components/Header\";\nimport BackButton from \"../../components/BackButton\";\nimport { areStringsEqual, findFirstDifferentWord } from \"../../utils\";\nimport \"./styles.css\";\n\ntype Props = {\n  match: Object,\n  flashcard: ?Flashcard\n};\n\ntype State = {\n  text: string,\n  checked: boolean,\n  correct: ?boolean,\n  firstDifferentWord: ?WordInString\n};\n\nclass PracticeFlashcard extends React.Component<Props, State> {\n  state = {\n    text: \"\",\n    checked: false,\n    correct: null,\n    firstDifferentWord: null\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"keyup\", this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keyup\", this.handleKeyUp);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (!this.state.checked && prevState.checked) {\n      this.focusTextInput();\n    }\n  }\n\n  textInput = null;\n\n  setTextInputRef = element => {\n    this.textInput = element;\n  };\n\n  focusTextInput = () => {\n    // Focus the text input using the raw DOM API\n    if (this.textInput) this.textInput.focus();\n  };\n\n  isValid = () => {\n    const { text, checked } = this.state;\n\n    return text.trim() && !checked;\n  };\n\n  handleChange = (fieldName, event) => {\n    const value = event.target.value;\n\n    this.setState({\n      [fieldName]: value\n    });\n  };\n\n  handleKeyUp = event => {\n    const { checked } = this.state;\n\n    // Submit if SHIFT + ENTER is pressed\n    if (!checked && event.shiftKey && event.key === \"Enter\") {\n      this.handleCheck();\n    }\n\n    // Practice again if ENTER is pressed\n    if (checked && event.key === \"Enter\") {\n      this.handleAgain();\n    }\n  };\n\n  handleCheck = () => {\n    const { text } = this.state;\n\n    if (!this.isValid()) {\n      return;\n    }\n\n    const correct = areStringsEqual(text, this.props.flashcard.text);\n    const firstDifferentWord = !correct\n      ? findFirstDifferentWord(text.trim(), this.props.flashcard.text)\n      : null;\n\n    this.setState({\n      checked: true,\n      correct,\n      firstDifferentWord\n    });\n  };\n\n  handleAgain = () => {\n    this.setState({\n      text: \"\",\n      checked: false,\n      correct: null,\n      firstDifferentWord: null\n    });\n  };\n\n  render() {\n    const {\n      match: {\n        params: { setId }\n      }\n    } = this.props;\n    const { text, checked, correct, firstDifferentWord } = this.state;\n\n    if (!this.props.flashcard) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <React.Fragment>\n        <Header color=\"default\">\n          <BackButton parentURL={`/sets/${setId}`} />\n          <Typography variant=\"subheading\" color=\"inherit\">\n            Practice\n          </Typography>\n        </Header>\n        <div className=\"practiceContent\">\n          <div className=\"practiceForm\">\n            <Typography variant=\"title\" color=\"inherit\">\n              {this.props.flashcard.title}\n            </Typography>\n            {checked && firstDifferentWord ? (\n              <React.Fragment>\n                <Typography\n                  variant=\"subheading\"\n                  color=\"textSecondary\"\n                  className=\"practiceTextSectionTitle\"\n                >\n                  Your answer\n                </Typography>\n                <Typography\n                  variant=\"subheading\"\n                  color=\"default\"\n                  className=\"practiceTextCorrection\"\n                  gutterBottom\n                >\n                  {text.slice(0, firstDifferentWord.left)}\n                  <span className=\"errorText\">{firstDifferentWord.word}</span>\n                  {text.slice(firstDifferentWord.right)}\n                </Typography>\n                <Typography\n                  variant=\"subheading\"\n                  color=\"textSecondary\"\n                  className=\"practiceTextSectionTitle\"\n                >\n                  Correct answer\n                </Typography>\n                <Typography\n                  variant=\"subheading\"\n                  color=\"inherit\"\n                  className=\"practiceTextCorrection\"\n                >\n                  {this.props.flashcard.text}\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <TextField\n                placeholder=\"Type the text here\"\n                onChange={event => this.handleChange(\"text\", event)}\n                inputRef={this.setTextInputRef}\n                disabled={checked}\n                value={text}\n                spellCheck=\"false\"\n                rows={3}\n                rowsMax={10}\n                autoFocus\n                InputLabelProps={{\n                  shrink: true\n                }}\n                multiline\n                margin=\"normal\"\n              />\n            )}\n          </div>\n          {checked ? (\n            <Button variant=\"raised\" color=\"primary\" onClick={this.handleAgain}>\n              Practice Again\n            </Button>\n          ) : (\n            <Button\n              variant=\"raised\"\n              color=\"primary\"\n              onClick={this.handleCheck}\n              disabled={!this.isValid()}\n            >\n              Check\n            </Button>\n          )}\n          <Snackbar\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\"\n            }}\n            open={checked}\n            className=\"practiceNotification\"\n            ContentProps={{\n              className: correct\n                ? \"practiceNotificationCorrect\"\n                : \"practiceNotificationIncorrect\"\n            }}\n            transitionDuration={{ exit: 0 }}\n            message={\n              <span>\n                {correct ? \"You are correct!\" : \"Oops, that's not correct\"}\n                <br />\n                {firstDifferentWord && firstDifferentWord.word}\n              </span>\n            }\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect((state, props) => ({\n  flashcard:\n    state.flashcards.sets[Number(props.match.params.setId) - 1].flashcards[\n      Number(props.match.params.flashcardId) - 1\n    ]\n}))(PracticeFlashcard);\n","// @flow\nimport * as React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Home from \"../Home\";\nimport Set from \"../Set\";\nimport NewSet from \"../NewSet\";\nimport NewFlashcard from \"../NewFlashcard\";\nimport EditFlashcard from \"../EditFlashcard\";\nimport PracticeFlashcard from \"../PracticeFlashcard\";\nimport \"./styles.css\";\n\nclass App extends React.Component<{}> {\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <div className=\"App\">\n          <Paper className=\"wrapper\" elevation={24}>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/sets/new\" component={NewSet} />\n              <Route exact path=\"/sets/:setId\" component={Set} />\n              <Route\n                exact\n                path=\"/sets/:setId/flashcards/new\"\n                component={NewFlashcard}\n              />\n              <Route\n                exact\n                path=\"/sets/:setId/flashcards/:flashcardId/practice\"\n                component={PracticeFlashcard}\n              />\n              <Route\n                exact\n                path=\"/sets/:setId/flashcards/:flashcardId/edit\"\n                component={EditFlashcard}\n              />\n              <Redirect to=\"/\" />\n            </Switch>\n          </Paper>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport ScrollMemory from \"react-router-scroll-memory\";\nimport { LastLocationProvider } from \"react-router-last-location\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport \"./index.css\";\nimport { store, persistor } from \"./store\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Router basename=\"/multiline-flashcards\">\n        <React.Fragment>\n          <ScrollMemory elementID=\"scrollingElement\" />\n          <LastLocationProvider>\n            <App />\n          </LastLocationProvider>\n        </React.Fragment>\n      </Router>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}